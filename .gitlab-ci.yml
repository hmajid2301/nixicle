image: nixos/nix

stages:
  - build
  - deploy

.base_setup:
  before_script:
    - mkdir -p /etc/nix
    - |
      cat >> /etc/nix/nix.conf << EOF
      experimental-features = nix-command flakes
      extra-platforms = x86_64-linux i686-linux
      system-features = benchmark big-parallel nixos-test i686
      substituters = https://attic.homelab.haseebmajid.dev/system?priority=43 https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
      trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:5M8uBPjS68HTadSbeCs0Jiu0Z1tJBNdahtKBCXhl+Z0= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=
      EOF
    - echo "machine attic.homelab.haseebmajid.dev password $ATTIC_AUTH_KEY" > /etc/nix/netrc
    - mkdir -p ~/.ssh /etc/ssh
    - chmod 700 ~/.ssh
    - ssh-keygen -t ed25519 -N "" -f ~/.ssh/id_ed25519
    - ssh-keygen -t ed25519 -N "" -f /etc/ssh/ssh_host_ed25519_key
    - |
      cat >> ~/.ssh/config << EOF
      Host *
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null
      EOF
    - export SSH_ASKPASS_REQUIRE=never
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_ed25519 2>/dev/null
    - |
      cat > /etc/resolv.conf << EOF
      nameserver 1.1.1.1
      nameserver 8.8.8.8
      EOF
    - nix-env -iA nixpkgs.cacert nixpkgs.tailscale nixpkgs.attic-client
    - tailscaled --state="mem:" --statedir=/var/lib/tailscale &
    - tailscale up --authkey=${TAILSCALE_AUTHKEY} --hostname="gitlab-$(cat /etc/hostname)" --accept-routes --ssh
    - attic login homelab https://attic.homelab.haseebmajid.dev $ATTIC_AUTH_KEY
    - attic use homelab:main
    - attic watch-store homelab:main &
  after_script:
    - attic push main /run/current-system -j 4

build:flake:
  extends: .base_setup
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - nix flake update
    - nix run github:Mic92/nix-fast-build -- --skip-cached --no-nom --attic-cache homelab:main
    - echo "Building and pushing all system configurations to Attic..."
    - for host in framework ms01 s100 vm vps workstation; do
        echo "Building nixosConfigurations.$host...";
        nix build ".#nixosConfigurations.$host.config.system.build.toplevel" --print-out-paths | attic push homelab:main;
      done
    - echo "Building and pushing packages to Attic..."
    - nix build ".#packages.x86_64-linux.install" --print-out-paths | attic push homelab:main
    - nix build ".#packages.x86_64-linux.kaf" --print-out-paths | attic push homelab:main
    - nix build ".#packages.x86_64-linux.octopus-energy" --print-out-paths | attic push homelab:main

build:changed:
  extends: .base_setup
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - echo "Building changed configurations and pushing to Attic..."
    - nix run github:Mic92/nix-fast-build -- --skip-cached --no-nom --attic-cache homelab:main

deploy:homelab:
  extends: .base_setup
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  parallel:
    matrix:
      - HOST: [ms01, s100, vps]
  script:
    - nix profile install github:serokell/deploy-rs
    - deploy ".#$HOST" --hostname $HOST --ssh-user nixos --skip-checks --confirm-timeout "600" --remote-build

