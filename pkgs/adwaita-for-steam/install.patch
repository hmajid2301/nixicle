diff --git a/install.py b/install.py
--- install.py
+++ install.py
@@ -286,9 +286,9 @@
 			if not test.with_suffix(".css").exists():
 				raise SystemExit(f"{TEXT_RED}{TEXT_CROSS} {TEXT_BOLD}{test}{TEXT_RESET}{TEXT_RED} theme not found.{TEXT_RESET}")
 
 
-	with TemporaryDirectory() as tmpdir:
+	with (Path(os.environ['NIX_OUT']) / 'build') as tmpdir:
 		tmp = Path(tmpdir)
 
 		copy_dir(adwaitadir, tmp / ADWAITA_DIR)
 		copy_dir(customdir, tmp / ADWAITA_DIR / CUSTOM_DIR)
@@ -298,31 +298,5 @@
 		print(f"{TEXT_BLUE}{TEXT_ARROW} Creating stage directory {TEXT_BOLD}{sourcedir}{TEXT_RESET}")
 
 		generate_libraryroot(libraryroot, args.extras, selected_theme, args.custom_css)
 
-		targets = set()
-
-		for t in args.target:
-			if t == "normal":
-				targets.add(Path(TARGET_NORMAL).expanduser().resolve())
-			elif t == "flatpak":
-				targets.add(Path(TARGET_FLATPAK).expanduser().resolve())
-			elif t == "windows":
-				targets.add(Path(TARGET_WINDOWS))
-			else:
-				targets.add(Path(t).expanduser().resolve())
-
-		for target in targets:
-			if not target.is_dir():
-				print(f"{TEXT_PURPLE}{TEXT_INFO} Directory {TEXT_BOLD}{target}{TEXT_RESET}{TEXT_PURPLE} does not exist{TEXT_RESET}")
-				continue
-
-			if args.uninstall:
-				uninstall_theme(target)
-				continue
-
-			patch_client_css(target, "Library")
-			copy_dir(sourcedir, target / STEAM_ADWAITA_DIR)
-			shutil.copy(libraryroot, target / STEAM_CUSTOM_LIBRARY)
-			dev_reload(target)
-
 		print(f"{TEXT_GREEN}{TEXT_CHECK} Done!{TEXT_RESET}")
